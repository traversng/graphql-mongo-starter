{"version":3,"sources":["webpack:///./db.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./resources/user/index.js","webpack:///./resources/user/user.model.js"],"names":["_resources_user__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","mongoose","connect","Object","BUILD_TARGET","DB_HOST","DB_PORT","DB_NAME","useNewUrlParser","db","connection","on","console","error","bind","once","log","travis","email","passwordHash","hashPassword","save","err","module","exports","originalModule","webpackPolyfill","create","children","defineProperty","enumerable","get","l","i","_user_model__WEBPACK_IMPORTED_MODULE_0__","userSchema","mongoose__WEBPACK_IMPORTED_MODULE_0___default","a","Schema","type","String","unique","required","password","methods","authenticate","plainTextPassword","bcryptjs__WEBPACK_IMPORTED_MODULE_1___default","compareSync","plaintTextPassword","this","salt","genSaltSync","hashSync","Error","User","model"],"mappings":"oHAAA,IAAAA,EAAAC,EAAA,6BAAIC,EAAWD,EAAQ,YAEvBC,EAASC,QAAT,aAA8BC,QAAAC,aAAA,WAAYC,QAA1C,IAAqDF,QAAAC,aAAA,WAAYE,QAAjE,IAA4EH,QAAAC,aAAA,WAAYG,SAAYC,iBAAiB,IAErH,IAAIC,EAAKR,EAASS,WAClBD,EAAGE,GAAG,QAASC,QAAQC,MAAMC,KAAKF,QAAS,sBAC3CH,EAAGM,KAAK,OAAQ,WAEdH,QAAQI,IAAR,kCAA8Cb,QAAAC,aAAA,WAAYC,QAA1D,IAAqEF,QAAAC,aAAA,WAAYE,QAAjF,IAA4FH,QAAAC,aAAA,WAAYG,WAG1G,IAAMU,EAAS,IAAIlB,EAAA,MAAMmB,MAAO,mBAAoBC,aAAc,cAGlEP,QAAQI,IAAI,8CAA+CC,EAAOG,aAAaH,EAAOE,eAEtFF,EAAOI,KAAK,SAACC,EAAKL,GAChB,GAAIK,EAAK,OAAOV,QAAQC,MAAMS,GAC9BV,QAAQI,IAAI,WAAYC,uEClB1BM,EAAAC,QAAA,SAAAC,GACA,IAAAA,EAAAC,gBAAA,CACA,IAAAH,EAAApB,OAAAwB,OAAAF,GAEAF,EAAAK,WAAAL,EAAAK,aACAzB,OAAA0B,eAAAN,EAAA,UACAO,YAAA,EACAC,IAAA,WACA,OAAAR,EAAAS,KAGA7B,OAAA0B,eAAAN,EAAA,MACAO,YAAA,EACAC,IAAA,WACA,OAAAR,EAAAU,KAGA9B,OAAA0B,eAAAN,EAAA,WACAO,YAAA,IAEAP,EAAAG,gBAAA,EAEA,OAAAH,oHCpBAA,EAAOC,QAAUU,EAAA,6NCCXC,EAAa,IAAIC,EAAAC,EAASC,QAC9BpB,OACEqB,KAAMC,OACNC,QAAQ,EACRC,UAAU,GAEZC,UACED,UAAU,EACVH,KAAMC,UAIVL,EAAWS,SACTC,aADmB,SACNC,GACX,OAAOC,EAAAV,EAAOW,YAAYC,mBAAoBC,KAAKP,WAErDvB,aAJmB,SAIN0B,GACX,GAAIA,EAAmB,CACrB,IAAMK,EAAOJ,EAAAV,EAAOe,YAAY,IAChC,OAAOL,EAAAV,EAAOgB,SAASP,EAAmBK,GAE5C,MAAM,IAAIG,MAAM,wDAIb,IAAMC,EAAOnB,EAAAC,EAASmB,MAAM,OAAQrB","file":"0.fa734373fd95d252610b.hot-update.js","sourcesContent":["var mongoose = require('mongoose');\nimport { User } from './resources/user'\nmongoose.connect(`mongodb://${process.env.DB_HOST}:${process.env.DB_PORT}/${process.env.DB_NAME}`, {useNewUrlParser: true});\n\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n  console.log(`we're connected! to: mongodb://${process.env.DB_HOST}:${process.env.DB_PORT}/${process.env.DB_NAME}`);\n});\n\nconst travis = new User({email: 'travis@gmail.com', passwordHash: 'qwrtuip12'});\n// travis.report();\n// travis.hashPassword(travis.passwordHash);\nconsole.log('travis.hashPassword(travis.passwordHash);: ', travis.hashPassword(travis.passwordHash));\n\ntravis.save((err, travis) => {\n  if (err) return console.error(err);\n  console.log('travis: ', travis);\n});","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { User } from './user.model';\n\nmodule.exports = User;","import mongoose from 'mongoose'\nimport bcrypt from 'bcryptjs';\n\nconst userSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    unique: true,\n    required: true\n  },\n  password: {\n    required: true,\n    type: String\n  }\n})\n\nuserSchema.methods = {\n  authenticate(plainTextPassword) {\n    return bcrypt.compareSync(plaintTextPassword, this.password);\n  },\n  hashPassword(plainTextPassword) {\n    if (plainTextPassword) {\n      const salt = bcrypt.genSaltSync(10);\n      return bcrypt.hashSync(plainTextPassword, salt);\n    }\n    throw new Error('could not save user! no plainTextPassword provided')\n  }\n}\n\nexport const User = mongoose.model('User', userSchema);;"],"sourceRoot":""}