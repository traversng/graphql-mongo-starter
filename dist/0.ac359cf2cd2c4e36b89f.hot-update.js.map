{"version":3,"sources":["webpack:///./resources/user/user.model.js","webpack:///./db.js"],"names":["userSchema","external_mongoose_default","a","Schema","email","type","String","unique","required","password","methods","authenticate","plainTextPassword","external_bcryptjs_default","compareSync","plaintTextPassword","this","hashPassword","salt","genSaltSync","hashSync","Error","model","mongoose","__webpack_require__","connect","Object","BUILD_TARGET","DB_HOST","DB_PORT","DB_NAME","useNewUrlParser","db","connection","on","console","error","bind","once","log","travis","undefined","passwordHash","save","err"],"mappings":"0KAGMA,EAAa,IAAIC,EAAAC,EAASC,QAC9BC,OACEC,KAAMC,OACNC,QAAQ,EACRC,UAAU,GAEZC,UACED,UAAU,EACVH,KAAMC,UAIVN,EAAWU,SACTC,aADmB,SACNC,GACX,OAAOC,EAAAX,EAAOY,YAAYC,mBAAoBC,KAAKP,WAErDQ,aAJmB,SAINL,GACX,GAAIA,EAAmB,CACrB,IAAMM,EAAOL,EAAAX,EAAOiB,YAAY,IAChC,OAAON,EAAAX,EAAOkB,SAASR,EAAmBM,GAE5C,MAAM,IAAIG,MAAM,wDAIApB,EAAAC,EAASoB,MAAM,OAAQtB,GAApC,IC5BHuB,EAAWC,EAAQ,YAEvBD,EAASE,QAAT,aAA8BC,QAAAC,aAAA,WAAYC,QAA1C,IAAqDF,QAAAC,aAAA,WAAYE,QAAjE,IAA4EH,QAAAC,aAAA,WAAYG,SAAYC,iBAAiB,IAErH,IAAIC,EAAKT,EAASU,WAClBD,EAAGE,GAAG,QAASC,QAAQC,MAAMC,KAAKF,QAAS,sBAC3CH,EAAGM,KAAK,OAAQ,WAEdH,QAAQI,IAAR,kCAA8Cb,QAAAC,aAAA,WAAYC,QAA1D,IAAqEF,QAAAC,aAAA,WAAYE,QAAjF,IAA4FH,QAAAC,aAAA,WAAYG,WAG1G,IAAMU,EAAS,SAAIC,IAAMrC,MAAO,mBAAoBsC,aAAc,cAGlEP,QAAQI,IAAI,8CAA+CC,EAAOvB,aAAauB,EAAOE,eAEtFF,EAAOG,KAAK,SAACC,EAAKJ,GAChB,GAAII,EAAK,OAAOT,QAAQC,MAAMQ,GAC9BT,QAAQI,IAAI,WAAYC","file":"0.ac359cf2cd2c4e36b89f.hot-update.js","sourcesContent":["import mongoose from 'mongoose'\nimport bcrypt from 'bcryptjs';\n\nconst userSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    unique: true,\n    required: true\n  },\n  password: {\n    required: true,\n    type: String\n  }\n})\n\nuserSchema.methods = {\n  authenticate(plainTextPassword) {\n    return bcrypt.compareSync(plaintTextPassword, this.password);\n  },\n  hashPassword(plainTextPassword) {\n    if (plainTextPassword) {\n      const salt = bcrypt.genSaltSync(10);\n      return bcrypt.hashSync(plainTextPassword, salt);\n    }\n    throw new Error('could not save user! no plainTextPassword provided')\n  }\n}\n\nexport const User = mongoose.model('User', userSchema);;","var mongoose = require('mongoose');\nimport { User } from './resources/user'\nmongoose.connect(`mongodb://${process.env.DB_HOST}:${process.env.DB_PORT}/${process.env.DB_NAME}`, {useNewUrlParser: true});\n\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n  console.log(`we're connected! to: mongodb://${process.env.DB_HOST}:${process.env.DB_PORT}/${process.env.DB_NAME}`);\n});\n\nconst travis = new User({email: 'travis@gmail.com', passwordHash: 'qwrtuip12'});\n// travis.report();\n// travis.hashPassword(travis.passwordHash);\nconsole.log('travis.hashPassword(travis.passwordHash);: ', travis.hashPassword(travis.passwordHash));\n\ntravis.save((err, travis) => {\n  if (err) return console.error(err);\n  console.log('travis: ', travis);\n});"],"sourceRoot":""}